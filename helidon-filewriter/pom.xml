<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>io.helidon.applications</groupId>
        <artifactId>helidon-mp</artifactId>
        <version>4.0.6</version>
        <relativePath/>
    </parent>
    <groupId>com.oracle.labs.helidon.fileio</groupId>
    <artifactId>filewriter</artifactId>
    <version>1.0.0</version>
	<properties>
		<mainClass>io.helidon.microprofile.cdi.Main</mainClass>
		<maven.compiler.source>21</maven.compiler.source>
		<maven.compiler.target>${maven.compiler.source} </maven.compiler.target>
		<version.lombok>1.18.32</version.lombok>
		<version.jib>3.4.1</version.jib>
		<container.image>ghcr.io/graalvm/jdk-community:21</container.image>
	</properties>


    <dependencies>
        <dependency>
            <groupId>io.helidon.microprofile.bundles</groupId>
            <artifactId>helidon-microprofile-core</artifactId>
        </dependency>
        <dependency>
            <groupId>io.helidon.microprofile.openapi</groupId>
            <artifactId>helidon-microprofile-openapi</artifactId>
        </dependency>
        <dependency>
            <groupId>io.helidon.microprofile.health</groupId>
            <artifactId>helidon-microprofile-health</artifactId>
        </dependency>
        <dependency>
            <groupId>jakarta.json.bind</groupId>
            <artifactId>jakarta.json.bind-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-json-binding</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>io.helidon.logging</groupId>
            <artifactId>helidon-logging-jul</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>io.smallrye</groupId>
            <artifactId>jandex</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.activation</groupId>
            <artifactId>jakarta.activation-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.eclipse.microprofile.metrics</groupId>
            <artifactId>microprofile-metrics-api</artifactId>
        </dependency>
        <dependency>
            <groupId>io.helidon.microprofile.metrics</groupId>
            <artifactId>helidon-microprofile-metrics</artifactId>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.helidon.microprofile.testing</groupId>
            <artifactId>helidon-microprofile-testing-junit5</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <scope>test</scope>
        </dependency>
		<!-- Utilities -->
		<!-- Lombok does the auto method creation -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${version.lombok}</version>
			<scope>provided</scope>
		</dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-libs</id>
                    </execution>
                </executions>
            </plugin>
            <plugin>
				<groupId>com.google.cloud.tools</groupId>
				<artifactId>jib-maven-plugin</artifactId>
				<version>${version.jib}</version>
				<configuration>
					<from>
						<image>${container.image}</image>
					</from>
					<to>
						<image>jib-${project.artifactId}</image>
						<tags>
							<tag>${project.version}</tag>
							<tag>latest</tag>
						</tags>
					</to>
					<container>
						<jvmFlags>
							<jmxFlag>-server</jmxFlag>
							<jmxFlag>-Djava.awt.headless=true</jmxFlag>
							<jmxFlag>-XX:+UnlockExperimentalVMOptions</jmxFlag>
							<jmxFlag>-XX:+UseG1GC</jmxFlag>
						</jvmFlags>
						<mainClass>${mainClass}</mainClass>
						<ports>
							<port>8080</port>
						</ports>
						<volumes>
							<volume>/dataDirectory</volume>
						</volumes>
						<extraClasspath>/app/resources</extraClasspath>
					</container>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>dockerBuild</goal>
						</goals>
						<phase>package</phase>
					</execution>
				</executions>
			</plugin>
            <plugin>
                <groupId>io.smallrye</groupId>
                <artifactId>jandex-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>make-index</id>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
